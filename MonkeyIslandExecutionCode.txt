/**
  This List of List represents the fields of the island and the number of bananas that you can find
  You can change the array in columns or lines and it will calculate the max banas that a monkey can get 
  following document rules.
  You can create MonkeyIsland class on Salesforce and execute on anonymous like this
  I could not make the class discover by itself what is the best first row, so I made the program try all the rows and store the best result
  Each call starts from a different row (on line 22)
**/
Integer[][] island = new List<List<Integer>>();
island.add(new List<Integer>());
island[0].addAll(new List<Integer>{10, 33, 13, 15});
island.add(new List<Integer>());
island[1].addAll(new List<Integer>{22, 21, 04, 1});
island.add(new List<Integer>());
island[2].addAll(new List<Integer>{5, 0, 2, 3});
island.add(new List<Integer>());
island[3].addAll(new List<Integer>{25, 6, 14, 2});

MonkeyIsland mi = new MonkeyIsland(island);
Integer maxPath = 0;
for(Integer i = 0; i < island.size(); i++){
    Integer thisPath = mi.sumMaxPath(i,0);
    if(maxPath < thisPath){
        maxPath = thisPath;
    }
}
System.debug('The max bananas the monkey can get is: ' + maxPath);
